{
    "Socrates is human |~ Socrates is mortal": {
        "0000": "Socrates is human |~ Socrates is mortal"
    },
    "(Tweety is a bird and Sylvester is a cat) |~ (Tom is a dog or Tom is an owl)": {
        "0000": "(Tweety is a bird and Sylvester is a cat) |~ (Tom is a dog or Tom is an owl)",
        "0000000M": "Tweety is a bird, Sylvester is a cat |~ (Tom is a dog or Tom is an owl)",
        "0000000M000M": "Tweety is a bird, Sylvester is a cat |~ Tom is a dog, Tom is an owl"
    },
    "(Herrings are red or Salmon are Blue) |~ (Tuna are green and Mackerel are yellow)": {
        "0000": "(Herrings are red or Salmon are Blue) |~ (Tuna are green and Mackerel are yellow)",
        "0000000L": "Herrings are red |~ (Tuna are green and Mackerel are yellow)",
        "0000000R": "Salmon are Blue |~ (Tuna are green and Mackerel are yellow)",
        "0000000L000L": "Herrings are red |~ Tuna are green",
        "0000000L000R": "Herrings are red |~ Mackerel are yellow",
        "0000000R000L": "Salmon are Blue |~ Tuna are green",
        "0000000R000R": "Salmon are Blue |~ Mackerel are yellow"
    },
    "(Eight twenties implies Four forties) |~ (Three times five implies Five times Three)": {
        "0000": "(Eight twenties implies Four forties) |~ (Three times five implies Five times Three)",
        "0000000L": " |~ Eight twenties, (Three times five implies Five times Three)",
        "0000000R": "Four forties |~ (Three times five implies Five times Three)",
        "0000000L000M": "Three times five |~ Five times Three, Eight twenties",
        "0000000R000M": "Three times five, Four forties |~ Five times Three"
    },
    "(not Aristotle eats lemons) |~ (not Alexander conquers Scotland)": {
        "0000": "(not Aristotle eats lemons) |~ (not Alexander conquers Scotland)",
        "0000000M": " |~ Aristotle eats lemons, (not Alexander conquers Scotland)",
        "0000000M000M": "Alexander conquers Scotland |~ Aristotle eats lemons"
    },
    "(Disks or Quetzals), (not (Quetzals or Harmans)) |~ (not (Harmans and Disks))": {
        "0000": "(Disks or Quetzals), (not (Quetzals or Harmans)) |~ (not (Harmans and Disks))",
        "0000000L": "Disks, (not (Quetzals or Harmans)) |~ (not (Harmans and Disks))",
        "0000000R": "Quetzals, (not (Quetzals or Harmans)) |~ (not (Harmans and Disks))",
        "0000000L000M": "Disks |~ (Quetzals or Harmans), (not (Harmans and Disks))",
        "0000000R000M": "Quetzals |~ (Quetzals or Harmans), (not (Harmans and Disks))",
        "0000000L000M000M": "Disks |~ Quetzals, Harmans, (not (Harmans and Disks))",
        "0000000R000M000M": "Quetzals |~ Quetzals, Harmans, (not (Harmans and Disks))",
        "0000000L000M000M000M": "(Harmans and Disks), Disks |~ Quetzals, Harmans",
        "0000000R000M000M000M": "(Harmans and Disks), Quetzals |~ Quetzals, Harmans",
        "0000000L000M000M000M000M": "Harmans, Disks, Disks |~ Quetzals, Harmans",
        "0000000R000M000M000M000M": "Harmans, Disks, Quetzals |~ Quetzals, Harmans"
    },
    "(Left Conjunct and Right Conjunct) |~ (Left Conjunct and Right Conjunct)": {
        "0000": "(Left Conjunct and Right Conjunct) |~ (Left Conjunct and Right Conjunct)",
        "0000000M": "Left Conjunct, Right Conjunct |~ (Left Conjunct and Right Conjunct)",
        "0000000M000L": "Left Conjunct, Right Conjunct |~ Left Conjunct",
        "0000000M000R": "Left Conjunct, Right Conjunct |~ Right Conjunct"
    },
    "(Left Disjunct or Right Disjunct) |~ (Left Disjunct or Right Disjunct)": {
        "0000": "(Left Disjunct or Right Disjunct) |~ (Left Disjunct or Right Disjunct)",
        "0000000L": "Left Disjunct |~ (Left Disjunct or Right Disjunct)",
        "0000000R": "Right Disjunct |~ (Left Disjunct or Right Disjunct)",
        "0000000L000M": "Left Disjunct |~ Left Disjunct, Right Disjunct",
        "0000000R000M": "Right Disjunct |~ Left Disjunct, Right Disjunct"
    },
    "(Antecedent implies Consequent) |~ (Antecedent implies Consequent)": {
        "0000": "(Antecedent implies Consequent) |~ (Antecedent implies Consequent)",
        "0000000L": " |~ Antecedent, (Antecedent implies Consequent)",
        "0000000R": "Consequent |~ (Antecedent implies Consequent)",
        "0000000L000M": "Antecedent |~ Consequent, Antecedent",
        "0000000R000M": "Antecedent, Consequent |~ Consequent"
    },
    "(not Negatum) |~ (not Negatum)": {
        "0000": "(not Negatum) |~ (not Negatum)",
        "0000000M": " |~ Negatum, (not Negatum)",
        "0000000M000M": "Negatum |~ Negatum"
    },
    " |~ (Daylight implies Nighttime)": {
        "0000": " |~ (Daylight implies Nighttime)",
        "0000000M": "Daylight,  |~ Nighttime"
    },
    "((Albert or Betty) implies (Carol and Daniel)) |~ ": {
        "0000": "((Albert or Betty) implies (Carol and Daniel)) |~ ",
        "0000000L": " |~ (Albert or Betty), ",
        "0000000R": "(Carol and Daniel) |~ ",
        "0000000L000M": " |~ Albert, Betty, ",
        "0000000R000M": "Carol, Daniel |~ "
    },
    "((not (A implies B)) and (C and (not D))), ((B or (not A)) or ((C and E) implies D)) |~ (not E)": {
        "0000": "((not (A implies B)) and (C and (not D))), ((B or (not A)) or ((C and E) implies D)) |~ (not E)",
        "0000000M": "(not (A implies B)), (C and (not D)), ((B or (not A)) or ((C and E) implies D)) |~ (not E)",
        "0000000M000M": "(C and (not D)), ((B or (not A)) or ((C and E) implies D)) |~ (A implies B), (not E)",
        "0000000M000M000M": "C, (not D), ((B or (not A)) or ((C and E) implies D)) |~ (A implies B), (not E)",
        "0000000M000M000M000M": "C, ((B or (not A)) or ((C and E) implies D)) |~ D, (A implies B), (not E)",
        "0000000M000M000M000M000L": "(B or (not A)), C |~ D, (A implies B), (not E)",
        "0000000M000M000M000M000R": "((C and E) implies D), C |~ D, (A implies B), (not E)",
        "0000000M000M000M000M000L000L": "B, C |~ D, (A implies B), (not E)",
        "0000000M000M000M000M000L000R": "(not A), C |~ D, (A implies B), (not E)",
        "0000000M000M000M000M000R000L": "C |~ (C and E), D, (A implies B), (not E)",
        "0000000M000M000M000M000R000R": "D, C |~ D, (A implies B), (not E)",
        "0000000M000M000M000M000L000R000M": "C |~ A, D, (A implies B), (not E)",
        "0000000M000M000M000M000R000L000L": "C |~ C, D, (A implies B), (not E)",
        "0000000M000M000M000M000R000L000R": "C |~ E, D, (A implies B), (not E)",
        "0000000M000M000M000M000L000L000M": "A, B, C |~ B, D, (not E)",
        "0000000M000M000M000M000R000R000M": "A, D, C |~ B, D, (not E)",
        "0000000M000M000M000M000L000R000M000M": "A, C |~ B, A, D, (not E)",
        "0000000M000M000M000M000R000L000L000M": "A, C |~ B, C, D, (not E)",
        "0000000M000M000M000M000R000L000R000M": "A, C |~ B, E, D, (not E)",
        "0000000M000M000M000M000L000L000M000M": "E, A, B, C |~ B, D",
        "0000000M000M000M000M000R000R000M000M": "E, A, D, C |~ B, D",
        "0000000M000M000M000M000L000R000M000M000M": "E, A, C |~ B, A, D",
        "0000000M000M000M000M000R000L000L000M000M": "E, A, C |~ B, C, D",
        "0000000M000M000M000M000R000L000R000M000M": "E, A, C |~ B, E, D"
    }
}